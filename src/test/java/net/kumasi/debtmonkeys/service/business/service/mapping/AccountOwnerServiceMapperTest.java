/*
 * Created on 26 Feb 2017 ( Time 16:22:45 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.debtmonkeys.service.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import net.kumasi.debtmonkeys.service.domain.AccountOwner;
import net.kumasi.debtmonkeys.service.domain.jpa.AccountOwnerEntity;
import net.kumasi.debtmonkeys.service.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class AccountOwnerServiceMapperTest {

	private AccountOwnerServiceMapper accountOwnerServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		accountOwnerServiceMapper = new AccountOwnerServiceMapper();
		accountOwnerServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'AccountOwnerEntity' to 'AccountOwner'
	 * @param accountOwnerEntity
	 */
	@Test
	public void testMapAccountOwnerEntityToAccountOwner() {
		// Given
		AccountOwnerEntity accountOwnerEntity = new AccountOwnerEntity();
		accountOwnerEntity.setUserName(mockValues.nextString(15));
		accountOwnerEntity.setPassword(mockValues.nextString(45));
		accountOwnerEntity.setEmailAddress(mockValues.nextString(45));
		accountOwnerEntity.setFirstName(mockValues.nextString(45));
		accountOwnerEntity.setLastName(mockValues.nextString(45));
		accountOwnerEntity.setNetMonthlyIncome(mockValues.nextDouble());
		accountOwnerEntity.setIsadmin(mockValues.nextString(1));
		
		// When
		AccountOwner accountOwner = accountOwnerServiceMapper.mapAccountOwnerEntityToAccountOwner(accountOwnerEntity);
		
		// Then
		assertEquals(accountOwnerEntity.getUserName(), accountOwner.getUserName());
		assertEquals(accountOwnerEntity.getPassword(), accountOwner.getPassword());
		assertEquals(accountOwnerEntity.getEmailAddress(), accountOwner.getEmailAddress());
		assertEquals(accountOwnerEntity.getFirstName(), accountOwner.getFirstName());
		assertEquals(accountOwnerEntity.getLastName(), accountOwner.getLastName());
		assertEquals(accountOwnerEntity.getNetMonthlyIncome(), accountOwner.getNetMonthlyIncome());
		assertEquals(accountOwnerEntity.getIsadmin(), accountOwner.getIsadmin());
	}
	
	/**
	 * Test : Mapping from 'AccountOwner' to 'AccountOwnerEntity'
	 */
	@Test
	public void testMapAccountOwnerToAccountOwnerEntity() {
		// Given
		AccountOwner accountOwner = new AccountOwner();
		accountOwner.setUserName(mockValues.nextString(15));
		accountOwner.setPassword(mockValues.nextString(45));
		accountOwner.setEmailAddress(mockValues.nextString(45));
		accountOwner.setFirstName(mockValues.nextString(45));
		accountOwner.setLastName(mockValues.nextString(45));
		accountOwner.setNetMonthlyIncome(mockValues.nextDouble());
		accountOwner.setIsadmin(mockValues.nextString(1));

		AccountOwnerEntity accountOwnerEntity = new AccountOwnerEntity();
		
		// When
		accountOwnerServiceMapper.mapAccountOwnerToAccountOwnerEntity(accountOwner, accountOwnerEntity);
		
		// Then
		assertEquals(accountOwner.getUserName(), accountOwnerEntity.getUserName());
		assertEquals(accountOwner.getPassword(), accountOwnerEntity.getPassword());
		assertEquals(accountOwner.getEmailAddress(), accountOwnerEntity.getEmailAddress());
		assertEquals(accountOwner.getFirstName(), accountOwnerEntity.getFirstName());
		assertEquals(accountOwner.getLastName(), accountOwnerEntity.getLastName());
		assertEquals(accountOwner.getNetMonthlyIncome(), accountOwnerEntity.getNetMonthlyIncome());
		assertEquals(accountOwner.getIsadmin(), accountOwnerEntity.getIsadmin());
	}

}