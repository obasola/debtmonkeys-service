/*
 * Created on 26 Feb 2017 ( Time 16:22:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package net.kumasi.debtmonkeys.service.domain.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "Account"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="Account", catalog="debtmonkey" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AccountEntity.countAll", query="SELECT COUNT(x) FROM AccountEntity x" )
} )
public class AccountEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="account_name", nullable=false, length=45)
    private String     accountName  ;

    @Column(name="original_balance")
    private Double     originalBalance ;

    @Column(name="current_balance")
    private Double     currentBalance ;

    @Column(name="min_payment_due")
    private Double     minPaymentDue ;

    @Temporal(TemporalType.DATE)
    @Column(name="date_last_payment")
    private Date       dateLastPayment ;

    @Temporal(TemporalType.DATE)
    @Column(name="date_next_payment_due")
    private Date       dateNextPaymentDue ;

    @Temporal(TemporalType.DATE)
    @Column(name="date_opened")
    private Date       dateOpened   ;

    @Temporal(TemporalType.DATE)
    @Column(name="date_closed")
    private Date       dateClosed   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_created")
    private Date       dateCreated  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_modified")
    private Date       dateModified ;

    @Column(name="auto_payment")
    private Byte       autoPayment  ;

    @Column(name="web_site", length=65)
    private String     webSite      ;

	// "accountTypeId" (column "Account_Type_Id") is not defined by itself because used as FK in a link 
	// "accountOwnerId" (column "Account_Owner_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="Account_Owner_id", referencedColumnName="id")
    private AccountOwnerEntity accountOwner;

    @OneToMany(mappedBy="account", targetEntity=PaymentHistoryEntity.class)
    private List<PaymentHistoryEntity> listOfPaymentHistory;

    @ManyToOne
    @JoinColumn(name="Account_Type_Id", referencedColumnName="id")
    private AccountTypeEntity accountType ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AccountEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : account_name ( VARCHAR ) 
    public void setAccountName( String accountName ) {
        this.accountName = accountName;
    }
    public String getAccountName() {
        return this.accountName;
    }

    //--- DATABASE MAPPING : original_balance ( DOUBLE ) 
    public void setOriginalBalance( Double originalBalance ) {
        this.originalBalance = originalBalance;
    }
    public Double getOriginalBalance() {
        return this.originalBalance;
    }

    //--- DATABASE MAPPING : current_balance ( DOUBLE ) 
    public void setCurrentBalance( Double currentBalance ) {
        this.currentBalance = currentBalance;
    }
    public Double getCurrentBalance() {
        return this.currentBalance;
    }

    //--- DATABASE MAPPING : min_payment_due ( DOUBLE ) 
    public void setMinPaymentDue( Double minPaymentDue ) {
        this.minPaymentDue = minPaymentDue;
    }
    public Double getMinPaymentDue() {
        return this.minPaymentDue;
    }

    //--- DATABASE MAPPING : date_last_payment ( DATE ) 
    public void setDateLastPayment( Date dateLastPayment ) {
        this.dateLastPayment = dateLastPayment;
    }
    public Date getDateLastPayment() {
        return this.dateLastPayment;
    }

    //--- DATABASE MAPPING : date_next_payment_due ( DATE ) 
    public void setDateNextPaymentDue( Date dateNextPaymentDue ) {
        this.dateNextPaymentDue = dateNextPaymentDue;
    }
    public Date getDateNextPaymentDue() {
        return this.dateNextPaymentDue;
    }

    //--- DATABASE MAPPING : date_opened ( DATE ) 
    public void setDateOpened( Date dateOpened ) {
        this.dateOpened = dateOpened;
    }
    public Date getDateOpened() {
        return this.dateOpened;
    }

    //--- DATABASE MAPPING : date_closed ( DATE ) 
    public void setDateClosed( Date dateClosed ) {
        this.dateClosed = dateClosed;
    }
    public Date getDateClosed() {
        return this.dateClosed;
    }

    //--- DATABASE MAPPING : date_created ( DATETIME ) 
    public void setDateCreated( Date dateCreated ) {
        this.dateCreated = dateCreated;
    }
    public Date getDateCreated() {
        return this.dateCreated;
    }

    //--- DATABASE MAPPING : date_modified ( DATETIME ) 
    public void setDateModified( Date dateModified ) {
        this.dateModified = dateModified;
    }
    public Date getDateModified() {
        return this.dateModified;
    }

    //--- DATABASE MAPPING : auto_payment ( TINYINT ) 
    public void setAutoPayment( Byte autoPayment ) {
        this.autoPayment = autoPayment;
    }
    public Byte getAutoPayment() {
        return this.autoPayment;
    }

    //--- DATABASE MAPPING : web_site ( VARCHAR ) 
    public void setWebSite( String webSite ) {
        this.webSite = webSite;
    }
    public String getWebSite() {
        return this.webSite;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setAccountOwner( AccountOwnerEntity accountOwner ) {
        this.accountOwner = accountOwner;
    }
    public AccountOwnerEntity getAccountOwner() {
        return this.accountOwner;
    }

    public void setListOfPaymentHistory( List<PaymentHistoryEntity> listOfPaymentHistory ) {
        this.listOfPaymentHistory = listOfPaymentHistory;
    }
    public List<PaymentHistoryEntity> getListOfPaymentHistory() {
        return this.listOfPaymentHistory;
    }

    public void setAccountType( AccountTypeEntity accountType ) {
        this.accountType = accountType;
    }
    public AccountTypeEntity getAccountType() {
        return this.accountType;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(accountName);
        sb.append("|");
        sb.append(originalBalance);
        sb.append("|");
        sb.append(currentBalance);
        sb.append("|");
        sb.append(minPaymentDue);
        sb.append("|");
        sb.append(dateLastPayment);
        sb.append("|");
        sb.append(dateNextPaymentDue);
        sb.append("|");
        sb.append(dateOpened);
        sb.append("|");
        sb.append(dateClosed);
        sb.append("|");
        sb.append(dateCreated);
        sb.append("|");
        sb.append(dateModified);
        sb.append("|");
        sb.append(autoPayment);
        sb.append("|");
        sb.append(webSite);
        return sb.toString(); 
    } 

}
