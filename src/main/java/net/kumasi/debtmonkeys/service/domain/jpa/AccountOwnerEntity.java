/*
 * Created on 26 Feb 2017 ( Time 16:22:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package net.kumasi.debtmonkeys.service.domain.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "Account_Owner"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="Account_Owner", catalog="debtmonkey" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AccountOwnerEntity.countAll", query="SELECT COUNT(x) FROM AccountOwnerEntity x" )
} )
public class AccountOwnerEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="user_name", nullable=false, length=15)
    private String     userName     ;

    @Column(name="password", length=45)
    private String     password     ;

    @Column(name="email_address", length=45)
    private String     emailAddress ;

    @Column(name="first_name", length=45)
    private String     firstName    ;

    @Column(name="last_name", length=45)
    private String     lastName     ;

    @Column(name="net_monthly_income")
    private Double     netMonthlyIncome ;

    @Column(name="isAdmin", length=1)
    private String     isadmin      ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="accountOwner", targetEntity=AccountEntity.class)
    private List<AccountEntity> listOfAccount;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AccountOwnerEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : user_name ( VARCHAR ) 
    public void setUserName( String userName ) {
        this.userName = userName;
    }
    public String getUserName() {
        return this.userName;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : email_address ( VARCHAR ) 
    public void setEmailAddress( String emailAddress ) {
        this.emailAddress = emailAddress;
    }
    public String getEmailAddress() {
        return this.emailAddress;
    }

    //--- DATABASE MAPPING : first_name ( VARCHAR ) 
    public void setFirstName( String firstName ) {
        this.firstName = firstName;
    }
    public String getFirstName() {
        return this.firstName;
    }

    //--- DATABASE MAPPING : last_name ( VARCHAR ) 
    public void setLastName( String lastName ) {
        this.lastName = lastName;
    }
    public String getLastName() {
        return this.lastName;
    }

    //--- DATABASE MAPPING : net_monthly_income ( DOUBLE ) 
    public void setNetMonthlyIncome( Double netMonthlyIncome ) {
        this.netMonthlyIncome = netMonthlyIncome;
    }
    public Double getNetMonthlyIncome() {
        return this.netMonthlyIncome;
    }

    //--- DATABASE MAPPING : isAdmin ( VARCHAR ) 
    public void setIsadmin( String isadmin ) {
        this.isadmin = isadmin;
    }
    public String getIsadmin() {
        return this.isadmin;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfAccount( List<AccountEntity> listOfAccount ) {
        this.listOfAccount = listOfAccount;
    }
    public List<AccountEntity> getListOfAccount() {
        return this.listOfAccount;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(userName);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(emailAddress);
        sb.append("|");
        sb.append(firstName);
        sb.append("|");
        sb.append(lastName);
        sb.append("|");
        sb.append(netMonthlyIncome);
        sb.append("|");
        sb.append(isadmin);
        return sb.toString(); 
    } 

}
