/*
 * Created on 26 Feb 2017 ( Time 16:22:54 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.debtmonkeys.service.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import net.kumasi.debtmonkeys.service.domain.AccountOwner;
import net.kumasi.debtmonkeys.service.business.service.AccountOwnerService;
import net.kumasi.debtmonkeys.service.web.listitem.AccountOwnerListItem;

/**
 * Spring MVC controller for 'AccountOwner' management.
 */
@Controller
public class AccountOwnerRestController {

	@Resource
	private AccountOwnerService accountOwnerService;
	
	@RequestMapping( value="/items/accountOwner",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AccountOwnerListItem> findAllAsListItems() {
		List<AccountOwner> list = accountOwnerService.findAll();
		List<AccountOwnerListItem> items = new LinkedList<AccountOwnerListItem>();
		for ( AccountOwner accountOwner : list ) {
			items.add(new AccountOwnerListItem( accountOwner ) );
		}
		return items;
	}
	
	@RequestMapping( value="/accountOwner",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AccountOwner> findAll() {
		return accountOwnerService.findAll();
	}

	@RequestMapping( value="/accountOwner/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AccountOwner findOne(@PathVariable("id") Integer id) {
		return accountOwnerService.findById(id);
	}
	
	@RequestMapping( value="/accountOwner",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AccountOwner create(@RequestBody AccountOwner accountOwner) {
		return accountOwnerService.create(accountOwner);
	}

	@RequestMapping( value="/accountOwner/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AccountOwner update(@PathVariable("id") Integer id, @RequestBody AccountOwner accountOwner) {
		return accountOwnerService.update(accountOwner);
	}

	@RequestMapping( value="/accountOwner/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		accountOwnerService.delete(id);
	}
	
}
