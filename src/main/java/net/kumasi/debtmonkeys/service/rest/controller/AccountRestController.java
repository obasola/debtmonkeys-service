/*
 * Created on 26 Feb 2017 ( Time 16:22:54 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.debtmonkeys.service.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import net.kumasi.debtmonkeys.service.domain.Account;
import net.kumasi.debtmonkeys.service.business.service.AccountService;
import net.kumasi.debtmonkeys.service.web.listitem.AccountListItem;

/**
 * Spring MVC controller for 'Account' management.
 */
@Controller
public class AccountRestController {

	@Resource
	private AccountService accountService;
	
	@RequestMapping( value="/items/account",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AccountListItem> findAllAsListItems() {
		List<Account> list = accountService.findAll();
		List<AccountListItem> items = new LinkedList<AccountListItem>();
		for ( Account account : list ) {
			items.add(new AccountListItem( account ) );
		}
		return items;
	}
	
	@RequestMapping( value="/account",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Account> findAll() {
		return accountService.findAll();
	}

	@RequestMapping( value="/account/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Account findOne(@PathVariable("id") Integer id) {
		return accountService.findById(id);
	}
	
	@RequestMapping( value="/account",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Account create(@RequestBody Account account) {
		return accountService.create(account);
	}

	@RequestMapping( value="/account/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Account update(@PathVariable("id") Integer id, @RequestBody Account account) {
		return accountService.update(account);
	}

	@RequestMapping( value="/account/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		accountService.delete(id);
	}
	
}
