/*
 * Created on 26 Feb 2017 ( Time 16:22:54 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.debtmonkeys.service.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import net.kumasi.debtmonkeys.service.domain.PaymentHistory;
import net.kumasi.debtmonkeys.service.business.service.PaymentHistoryService;
import net.kumasi.debtmonkeys.service.web.listitem.PaymentHistoryListItem;

/**
 * Spring MVC controller for 'PaymentHistory' management.
 */
@Controller
public class PaymentHistoryRestController {

	@Resource
	private PaymentHistoryService paymentHistoryService;
	
	@RequestMapping( value="/items/paymentHistory",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PaymentHistoryListItem> findAllAsListItems() {
		List<PaymentHistory> list = paymentHistoryService.findAll();
		List<PaymentHistoryListItem> items = new LinkedList<PaymentHistoryListItem>();
		for ( PaymentHistory paymentHistory : list ) {
			items.add(new PaymentHistoryListItem( paymentHistory ) );
		}
		return items;
	}
	
	@RequestMapping( value="/paymentHistory",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PaymentHistory> findAll() {
		return paymentHistoryService.findAll();
	}
	
	@RequestMapping( value="/paymentHistorybyAccount/{idAccount}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PaymentHistory> findAllByAccount(@PathVariable("idAccount") Integer idAccount) {
		return paymentHistoryService.findByAccount(idAccount);
	}
	
	

	@RequestMapping( value="/paymentHistory/{idpaymentHistory}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PaymentHistory findOne(@PathVariable("idpaymentHistory") Integer idpaymentHistory) {
		return paymentHistoryService.findById(idpaymentHistory);
	}
	
	@RequestMapping( value="/paymentHistory",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PaymentHistory create(@RequestBody PaymentHistory paymentHistory) {
		return paymentHistoryService.create(paymentHistory);
	}

	@RequestMapping( value="/paymentHistory/{idpaymentHistory}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PaymentHistory update(@PathVariable("idpaymentHistory") Integer idpaymentHistory, @RequestBody PaymentHistory paymentHistory) {
		return paymentHistoryService.update(paymentHistory);
	}

	@RequestMapping( value="/paymentHistory/{idpaymentHistory}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("idpaymentHistory") Integer idpaymentHistory) {
		paymentHistoryService.delete(idpaymentHistory);
	}
	
}
